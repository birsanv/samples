apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: acm-dr-virt-install
  annotations:
    policy.open-cluster-management.io/categories: CA Security Assessment and Authorization
    policy.open-cluster-management.io/controls: CA-2 Security Assessments, CA-7 Continuous Monitoring
    policy.open-cluster-management.io/standards: NIST SP 800-53
spec:
  disabled: false
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: check-dpa-config
        spec:
          object-templates-raw: |
            {{- $acm_virt_sch_name := "acm-rho-virt-schedule" }}
            {{- $schedule_label := "cluster.open-cluster-management.io/backup-schedule-type, cluster.open-cluster-management.io/backup-schedule-type in (kubevirt)"}}

            {{- /* check if VM CRD is not installed  */ -}}
            {{- $vm_crd_name := "virtualmachines.kubevirt.io" }}
            {{- $vm_crd := lookup "apiextensions.k8s.io/v1" "CustomResourceDefinition" "" $vm_crd_name }}
            {{- $vm_crd_exists := eq $vm_crd.metadata.name  $vm_crd_name }}

            {{- /* skip if VM CRD is not installed  */ -}}
            {{ if $vm_crd_exists }}

              {{- /* check if there are VM instances  */ -}}
              {{- $vms := (lookup "kubevirt.io/v1" "VirtualMachine" "" "" "{{hub fromConfigMap "" (printf "%s" (index .ManagedClusterLabels "acm-virt-config")) "backup_label_name" hub}}").items }}
              {{ if gt (len ($vms)) 0  }}

                {{- /* check if OADP CRD is installed  */ -}}
                {{- $dpa_crd_name := "dataprotectionapplications.oadp.openshift.io" }}
                {{- $dpa_crd := lookup "apiextensions.k8s.io/v1" "CustomResourceDefinition" "" $dpa_crd_name  }}
                {{- $dpa_crd_exists := eq $dpa_crd.metadata.name  $dpa_crd_name }}

                {{ if $dpa_crd_exists }}

                  {{- /* ns is the namespace for the OADP deployment  */ -}}
                  {{- $ns := "open-cluster-management-backup" }}

                  {{- /* check if this is a hub, acm installed  */ -}}
                  {{- $acm_crd_name := "multiclusterhubs.operator.open-cluster-management.io" }}
                  {{- $acm_crd := lookup "apiextensions.k8s.io/v1" "CustomResourceDefinition" "" $acm_crd_name  }}
                  {{- $is_hub := eq $acm_crd.metadata.name  $acm_crd_name }}

                  {{- $cls_configmap_name := "acm-virt-config-cls" }}
                  {{- $configMap := (lookup "v1" "ConfigMap" "" "acm-virt-config-cls" ) }}
                  {{- $dpa_name := "" }}
                  {{ if not $is_hub }}
                    {{- $ns = "{{ $configMap.data.backupNS }}" }}
                    {{- $dpa_name = "{{ $configMap.data.dpa_name }}" }}
                  {{ else }}
                    {{- $is_hub := eq $acm_crd.metadata.name  $acm_crd_name }}
                    {{- /* get DPA name  */ -}}
                    {{- $acm_crd_name := "multiclusterhubs.operator.open-cluster-management.io" }}
                    {{- range $dpa_objs := (lookup "oadp.openshift.io/v1alpha1" "DataProtectionApplication" $ns "").items  }}
                      {{- $dpa_name = $dpa_objs.metadata.name }}
                    {{- end}}
                  {{- end }}

                - complianceType: musthave
                  objectDefinition:
                    apiVersion: oadp.openshift.io/v1alpha1
                    kind: DataProtectionApplication
                    metadata:
                      namespace: {{ $ns }}
                      name: {{ $dpa_name }}
                    spec:
                      configuration:
                        velero:
                          defaultPlugins:
                            - csi
                            - openshift
                            - kubevirt
                        nodeAgent:
                          enable: true
                          uploaderType: kopia
                - complianceType: musthave
                  objectDefinition:
                    apiVersion: velero.io/v1
                    kind: BackupStorageLocation
                    metadata:
                      namespace: {{ $ns }}
                      ownerReferences:
                        - apiVersion: oadp.openshift.io/v1alpha1
                          blockOwnerDeletion: true
                          controller: true
                          kind: DataProtectionApplication
                          name: {{ $dpa_name }}
                    status:
                      phase: Available
                    {{- end}}
                  {{- end }}
                {{- end }}
          remediationAction: inform
          severity: high

    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: install-oadp-copy-config
        spec:
          object-templates-raw: |
            {{- /* ns is the namespace for the OADP deployment  */ -}}
            {{- $ns := "open-cluster-management-backup" }}

            {{- $acm_virt_sch_name := "acm-rho-virt-schedule" }}
            {{- $schedule_label := "cluster.open-cluster-management.io/backup-schedule-type, cluster.open-cluster-management.io/backup-schedule-type in (kubevirt)"}}

            {{- /* check if VM CRD is not installed  */ -}}
            {{- $vm_crd_name := "virtualmachines.kubevirt.io" }}
            {{- $vm_crd := lookup "apiextensions.k8s.io/v1" "CustomResourceDefinition" "" $vm_crd_name }}
            {{- $vm_crd_exists := eq $vm_crd.metadata.name  $vm_crd_name }}

            {{- /* check if this is a hub, acm installed  */ -}}
            {{- $acm_crd_name := "multiclusterhubs.operator.open-cluster-management.io" }}
            {{- $acm_crd := lookup "apiextensions.k8s.io/v1" "CustomResourceDefinition" "" $acm_crd_name  }}
            {{- $is_hub := eq $acm_crd.metadata.name  $acm_crd_name }}

            {{- /* run this ifVM CRD is installed and this is a managed cluster, NOT hub */ -}}
            {{ if $vm_crd_exists }}
              {{- /* check if there are VM instances  */ -}}
              {{ if gt (len ((lookup "kubevirt.io/v1" "VirtualMachine" "" "" "{{hub fromConfigMap "" (printf "%s" (index .ManagedClusterLabels "acm-virt-config")) "backup_label_name" hub}}").items)) 0  }}

                  {{- /* for managed clusters and hub, copy user created cron schedule yaml to the OADP namespace and name it acm-virt-cron-schedules  */ -}}
                  {{- /* for managed clusters and hub, copy user created acm-virt-config yaml to the OADP namespace and name it acm-virt-config-cls  */ -}}
                  {{- /* this simplifies config search on managed clusters, since it removes the need to access it from the hub  */ -}}

                  {{- $oadp_channel := "stable-1.4" }}
                  {{- $oadp_install_plan_approval := "Automatic" }}
                  {{- $oadp_subs_name := "redhat-oadp-operator" }}
                  {{- $oadp_operator_source := "redhat-operators" }}
                  {{- $oadp_source_ns := "openshift-marketplace" }}
                  {{- $cron_schedule_configmap_name := "acm-virt-cron-schedules" }}

                  {{- $oadp_channel = "{{hub fromConfigMap "" (printf "%s" (index .ManagedClusterLabels "acm-virt-config")) "channel" hub}}" }}
                  {{- $credentialsName := "{{hub fromConfigMap "" (printf "%s" (index .ManagedClusterLabels "acm-virt-config")) "credentials_name" hub}}" }}
                  {{ if not $is_hub }}
                    {{- $ns = "{{hub fromConfigMap "" (printf "%s" (index .ManagedClusterLabels "acm-virt-config")) "backupNS" hub}}" }}
                  {{- end }}

                - complianceType: musthave
                  objectDefinition:
                    apiVersion: v1
                    kind: Namespace
                    metadata:
                      name: {{ $ns }}

                - complianceType: mustonlyhave
                  objectDefinition:
                    apiVersion: v1
                    kind: ConfigMap
                    metadata:
                      name: "acm-virt-config-cls"
                      namespace: {{ $ns }}
                    data: '{{hub copyConfigMapData "" (printf "%s" (index .ManagedClusterLabels "acm-virt-config")) hub}}'

                - complianceType: mustonlyhave
                  objectDefinition:
                    apiVersion: v1
                    kind: ConfigMap
                    metadata:
                      name: {{ $cron_schedule_configmap_name }}
                      namespace: {{ $ns }}
                    data: '{{hub copyConfigMapData "" (fromConfigMap "" (printf "%s" (index .ManagedClusterLabels "acm-virt-config")) "schedule_hub_config_name") hub}}'

            {{ if (not $is_hub) }}
            {{- /* for managed clusters only, copy the oadp secret and install OADP  */ -}}
                - complianceType: musthave
                  objectDefinition:
                    apiVersion: v1
                    kind: Secret
                    metadata:
                      name: {{ $credentialsName }}
                      namespace: {{ $ns }}
                    data: '{{hub copySecretData "" (fromConfigMap "" (printf "%s" (index .ManagedClusterLabels "acm-virt-config")) "credentials_hub_secret_name") hub}}'

                - complianceType: musthave
                  objectDefinition:
                    apiVersion: operators.coreos.com/v1
                    kind: OperatorGroup
                    metadata:
                      name: redhat-oadp-operator-group
                      namespace: {{ $ns }}
                    spec:
                      targetNamespaces:
                      - {{ $ns }}

                - complianceType: musthave
                  objectDefinition:
                    apiVersion: operators.coreos.com/v1alpha1
                    kind: Subscription
                    metadata:
                      name: redhat-oadp-operator-subscription
                      namespace: {{ $ns }}
                    spec:
                      channel: {{ $oadp_channel }}
                      installPlanApproval: {{ $oadp_install_plan_approval }}
                      name: {{ $oadp_subs_name }}
                      source: {{ $oadp_operator_source }}
                      sourceNamespace: {{ $oadp_source_ns }}

                - complianceType: mustonlyhave
                  objectDefinition:
                    apiVersion: oadp.openshift.io/v1alpha1
                    kind: DataProtectionApplication
                    metadata:
                      name: {{hub fromConfigMap "" (printf "%s" (index .ManagedClusterLabels "acm-virt-config")) "dpa_name" hub}}
                      namespace: {{ $ns }}
                    spec: '{{hub (fromConfigMap "" (printf "%s" (index .ManagedClusterLabels "acm-virt-config")) "dpa_spec") | toLiteral hub}}'
                {{- end }}
              {{- end }}
            {{- end }}
          remediationAction: enforce
          pruneObjectBehavior: DeleteIfCreated
          severity: high 
