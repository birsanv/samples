apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: acm-dr-virt-install
  annotations:
    policy.open-cluster-management.io/categories: CA Security Assessment and Authorization
    policy.open-cluster-management.io/controls: CA-2 Security Assessments, CA-7 Continuous Monitoring
    policy.open-cluster-management.io/standards: NIST SP 800-53
    policy.open-cluster-management.io/description: |
      Installs OADP and configures DataProtectionApplication on the managed cluster.
spec:
  disabled: false
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: check-dpa-config
        spec:
          object-templates-raw: |
                {{- /* check if OADP CRD is installed  */ -}}
                {{- $dpa_crd_name := "dataprotectionapplications.oadp.openshift.io" }}
                {{- $dpa_crd := lookup "apiextensions.k8s.io/v1" "CustomResourceDefinition" "" $dpa_crd_name  }}
                {{- $dpa_crd_exists := eq $dpa_crd.metadata.name  $dpa_crd_name }}

                {{ if $dpa_crd_exists }}

                  {{- /* ns is the namespace for the OADP deployment  */ -}}
                  {{- $ns := "open-cluster-management-backup" }}
                  {{- /* check if this is a hub, acm installed  */ -}}
                  {{- $acm_crd_name := "multiclusterhubs.operator.open-cluster-management.io" }}
                  {{- $acm_crd := lookup "apiextensions.k8s.io/v1" "CustomResourceDefinition" "" $acm_crd_name  }}
                  {{- $is_hub := eq $acm_crd.metadata.name  $acm_crd_name }}

                  {{- $dpa_name := "" }}
                  {{ if not $is_hub }}
                    {{- $ns = "{{hub fromConfigMap "" (printf "%s" (index .ManagedClusterLabels "acm-virt-config")) "backupNS" hub}}" }}
                    {{- $dpa_name = "{{hub fromConfigMap "" (printf "%s" (index .ManagedClusterLabels "acm-virt-config")) "dpa_name" hub}}" }}
                  {{ else }}
                    {{- $is_hub := eq $acm_crd.metadata.name  $acm_crd_name }}
                    {{- /* get DPA name  */ -}}
                    {{- $acm_crd_name := "multiclusterhubs.operator.open-cluster-management.io" }}
                    {{- range $dpa_objs := (lookup "oadp.openshift.io/v1alpha1" "DataProtectionApplication" $ns "").items  }}
                      {{- $dpa_name = $dpa_objs.metadata.name }}
                    {{- end}}
                  {{- end }}

                - complianceType: musthave
                  objectDefinition:
                    apiVersion: oadp.openshift.io/v1alpha1
                    kind: DataProtectionApplication
                    metadata:
                      namespace: {{ $ns }}
                      name: {{ $dpa_name }}
                    spec:
                      configuration:
                        velero:
                          defaultPlugins:
                            - csi
                            - openshift
                            - kubevirt
                        nodeAgent:
                          enable: true
                          uploaderType: kopia
                  {{ if not (eq "" $dpa_name )}}
                - complianceType: musthave
                  objectDefinition:
                    apiVersion: velero.io/v1
                    kind: BackupStorageLocation
                    metadata:
                      namespace: {{ $ns }}
                      name: "{{ $dpa_name }}-1"
                    status:
                      phase: Available
                    {{- end}}
                  {{- end }}
          remediationAction: inform
          severity: high

    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: install-oadp-copy-config
        spec:
          object-templates-raw: |
            {{- /* check if this is a hub, acm installed  */ -}}
            {{- $acm_crd_name := "multiclusterhubs.operator.open-cluster-management.io" }}
            {{- $acm_crd := lookup "apiextensions.k8s.io/v1" "CustomResourceDefinition" "" $acm_crd_name  }}
            {{- $is_hub := eq $acm_crd.metadata.name  $acm_crd_name }}

                  {{- /* for managed clusters and hub, copy user created cron schedule yaml to the OADP namespace and name it acm-virt-cron-schedules  */ -}}
                  {{- /* for managed clusters and hub, copy user created acm-virt-config yaml to the OADP namespace and name it acm-virt-config-cls  */ -}}
                  {{- /* this simplifies config search on managed clusters, since it removes the need to access it from the hub  */ -}}

                  {{- $cron_schedule_configmap_name := "acm-virt-cron-schedules" }}

                  {{- $oadp_channel := "{{hub fromConfigMap "" (printf "%s" (index .ManagedClusterLabels "acm-virt-config")) "channel" hub}}" }}
                  {{- $credentialsName := "{{hub fromConfigMap "" (printf "%s" (index .ManagedClusterLabels "acm-virt-config")) "credentials_name" hub}}" }}
                  {{- /* ns is the namespace for the OADP deployment  */ -}}
                  {{- $ns := "open-cluster-management-backup" }}
                  {{ if not $is_hub }}
                    {{- $ns = "{{hub fromConfigMap "" (printf "%s" (index .ManagedClusterLabels "acm-virt-config")) "backupNS" hub}}" }}
                  {{- end }}

                - complianceType: musthave
                  objectDefinition:
                    apiVersion: v1
                    kind: Namespace
                    metadata:
                      name: {{ $ns }}

                - complianceType: mustonlyhave
                  objectDefinition:
                    apiVersion: v1
                    kind: ConfigMap
                    metadata:
                      name: "acm-virt-config-cls"
                      namespace: {{ $ns }}
                    data: '{{hub copyConfigMapData "" (printf "%s" (index .ManagedClusterLabels "acm-virt-config")) hub}}'

                - complianceType: mustonlyhave
                  objectDefinition:
                    apiVersion: v1
                    kind: ConfigMap
                    metadata:
                      name: {{ $cron_schedule_configmap_name }}
                      namespace: {{ $ns }}
                    data: '{{hub copyConfigMapData "" (fromConfigMap "" (printf "%s" (index .ManagedClusterLabels "acm-virt-config")) "schedule_hub_config_name") hub}}'

            {{- /* for managed clusters only, copy the oadp secret and install OADP  */ -}}
            {{ if (not $is_hub) }}
                - complianceType: musthave
                  objectDefinition:
                    apiVersion: v1
                    kind: Secret
                    metadata:
                      name: {{ $credentialsName }}
                      namespace: {{ $ns }}
                    data: '{{hub copySecretData "" (fromConfigMap "" (printf "%s" (index .ManagedClusterLabels "acm-virt-config")) "credentials_hub_secret_name") hub}}'

                - complianceType: musthave
                  objectDefinition:
                    apiVersion: operators.coreos.com/v1
                    kind: OperatorGroup
                    metadata:
                      name: redhat-oadp-operator-group
                      namespace: {{ $ns }}
                    spec:
                      targetNamespaces:
                      - {{ $ns }}

                - complianceType: musthave
                  objectDefinition:
                    apiVersion: operators.coreos.com/v1alpha1
                    kind: Subscription
                    metadata:
                      name: redhat-oadp-operator-subscription
                      namespace: {{ $ns }}
                    spec:
                      channel: {{ $oadp_channel }}
                      installPlanApproval: "Automatic"
                      name: "redhat-oadp-operator"
                      source: "redhat-operators"
                      sourceNamespace: "openshift-marketplace"

                {{- /* check if OADP CRD is installed  */ -}}
                {{- $dpa_crd_name := "dataprotectionapplications.oadp.openshift.io" }}
                {{- $dpa_crd := lookup "apiextensions.k8s.io/v1" "CustomResourceDefinition" "" "dataprotectionapplications.oadp.openshift.io"  }}
                {{- $dpa_crd_exists := eq $dpa_crd.metadata.name  $dpa_crd_name }}
                  {{- if $dpa_crd_exists }}
                - complianceType: mustonlyhave
                  objectDefinition:
                    apiVersion: oadp.openshift.io/v1alpha1
                    kind: DataProtectionApplication
                    metadata:
                      name: {{hub fromConfigMap "" (printf "%s" (index .ManagedClusterLabels "acm-virt-config")) "dpa_name" hub}}
                      namespace: {{ $ns }}
                    spec: '{{hub (fromConfigMap "" (printf "%s" (index .ManagedClusterLabels "acm-virt-config")) "dpa_spec") | toLiteral hub}}'
                  {{- end }}
                {{- end }}
          remediationAction: enforce
          pruneObjectBehavior: DeleteIfCreated
          severity: high
