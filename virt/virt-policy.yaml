apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: virt-backup
  annotations:
    policy.open-cluster-management.io/categories: CA Security Assessment and Authorization
    policy.open-cluster-management.io/controls: CA-2 Security Assessments, CA-7 Continuous Monitoring
    policy.open-cluster-management.io/standards: NIST SP 800-53
spec:
  disabled: false
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: check-dpa-config
        spec:
          object-templates-raw: |
            {{- /* ns is the namespace for the OADP deployment  */ -}}
            {{- $ns := "open-cluster-management-backup" }}
            {{- $acm_virt_sch_name := "acm-rho-virt-schedule" }} 
            {{- $schedule_label := "cluster.open-cluster-management.io/backup-schedule-type, cluster.open-cluster-management.io/backup-schedule-type in (kubevirt)"}}

            {{- /* check if VM CRD is not installed  */ -}}
            {{- $vm_crd_name := "virtualmachines.kubevirt.io" }}
            {{- $vm_crd := lookup "apiextensions.k8s.io/v1" "CustomResourceDefinition" "" $vm_crd_name }}
            {{- $vm_crd_exists := eq $vm_crd.metadata.name  $vm_crd_name }}

            {{- /* skip if VM CRD is not installed  */ -}}
            {{ if $vm_crd_exists }} 

              {{- /* check if there are VM instances  */ -}}
              {{- $vms := (lookup "kubevirt.io/v1" "VirtualMachine" "" "" ).items }}
              {{ if gt (len ($vms)) 0  }}

                {{- /* check if OADP CRD is not installed  */ -}}
                {{- $dpa_crd_name := "dataprotectionapplications.oadp.openshift.io" }}
                {{- $dpa_crd := lookup "apiextensions.k8s.io/v1" "CustomResourceDefinition" "" "dataprotectionapplications.oadp.openshift.io"  }}
                {{- $dpa_crd_exists := eq $dpa_crd.metadata.name  $dpa_crd_name }}

                {{ if $dpa_crd_exists }}
                - complianceType: musthave
                  objectDefinition:
                    apiVersion: oadp.openshift.io/v1alpha1
                    kind: DataProtectionApplication
                    metadata:
                      namespace: {{ $ns }}
                    spec:
                      configuration:
                        velero:
                          defaultPlugins:
                            - csi
                            - openshift
                            - kubevirt
                        nodeAgent: 
                          enable: true 
                          uploaderType: kopia
                  {{ else }}
                - complianceType: musthave
                  objectDefinition:
                    apiVersion: apiextensions.k8s.io/v1
                    kind: CustomResourceDefinition
                    metadata:
                      name: {{ $dpa_crd_name }}
                  {{- end }}
                {{- end }}
              {{- end }}
          remediationAction: inform
          severity: high 
          customMessage:
            noncompliant: |-
              A DataProtectionApplication with defaultPlugins (csi, openshift, kubevirt) and nodeAgent enabled and uploaderType set to kopia was not found.
              This settings are needed for the VirtualMachine backup so make sure the DataProtectionApplication exists and has these values set.                                                   

    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: install-oadp-managed-cls
        spec:
          object-templates-raw: |
            {{- /* ns is the namespace for the OADP deployment  */ -}}
            {{- $ns := "open-cluster-management-backup" }}


            {{- $acm_virt_sch_name := "acm-rho-virt-schedule" }} 
            {{- $schedule_label := "cluster.open-cluster-management.io/backup-schedule-type, cluster.open-cluster-management.io/backup-schedule-type in (kubevirt)"}}

            {{- /* check if VM CRD is not installed  */ -}}
            {{- $vm_crd_name := "virtualmachines.kubevirt.io" }}
            {{- $vm_crd := lookup "apiextensions.k8s.io/v1" "CustomResourceDefinition" "" $vm_crd_name }}
            {{- $vm_crd_exists := eq $vm_crd.metadata.name  $vm_crd_name }}

            {{- /* check if this is a hub, acm installed  */ -}}
            {{- $acm_crd_name := "multiclusterhubs.operator.open-cluster-management.io" }}
            {{- $acm_crd := lookup "apiextensions.k8s.io/v1" "CustomResourceDefinition" "" $acm_crd_name  }}
            {{- $acm_crd_exists := eq $acm_crd.metadata.name  $acm_crd_name }}

            {{- /* run this ifVM CRD is installed and this is a managed cluster, NOT hub */ -}}
            {{ if and $vm_crd_exists (not ($acm_crd_exists)) }}

              {{- /* check if there are VM instances  */ -}}
              {{ if gt (len ((lookup "kubevirt.io/v1" "VirtualMachine" "" "" ).items)) 0  }}

                {{- /* check if OADP CRD is not installed  */ -}}
                {{- $dpa_crd_name := "dataprotectionapplications.oadp.openshift.io" }}
                {{- $dpa_crd := lookup "apiextensions.k8s.io/v1" "CustomResourceDefinition" "" "dataprotectionapplications.oadp.openshift.io"  }}
                {{- $dpa_crd_exists := eq $dpa_crd.metadata.name  $dpa_crd_name }}

                {{ if not $dpa_crd_exists }}

                  {{- $oadp_channel := "stable-1.4" }}
                  {{- $oadp_install_plan_approval := "Automatic" }}
                  {{- $oadp_subs_name := "redhat-oadp-operator" }}
                  {{- $oadp_operator_source := "redhat-operators" }}
                  {{- $oadp_source_ns := "openshift-marketplace" }}

                - complianceType: musthave
                  objectDefinition:
                    apiVersion: v1
                    kind: Namespace
                    metadata:
                      name: {{ $ns }}

                - complianceType: musthave
                  objectDefinition:
                    apiVersion: operators.coreos.com/v1
                    kind: OperatorGroup
                    metadata:
                      name: redhat-oadp-operator-group
                      namespace: {{ $ns }}
                    spec:
                      targetNamespaces:
                      - {{ $ns }}

                - complianceType: musthave
                  objectDefinition:
                    apiVersion: operators.coreos.com/v1alpha1
                    kind: Subscription
                    metadata:
                      name: redhat-oadp-operator-subscription
                      namespace: {{ $ns }}
                    spec:
                      channel: {{ $oadp_channel }}
                      installPlanApproval: {{ $oadp_install_plan_approval }}
                      name: {{ $oadp_subs_name }}
                      source: {{ $oadp_operator_source }}
                      sourceNamespace: {{ $oadp_source_ns }}

                {{- end }}
              {{- end }}
            {{- end }}
          remediationAction: enforce
          severity: high 

    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: check-backup-status-completed
        spec:
          object-templates-raw: |
            {{- /* ns is the namespace for the OADP deployment  */ -}}
            {{- $ns := "open-cluster-management-backup" }}
            {{- $acm_virt_sch_name := "acm-rho-virt-schedule" }} 
            {{- $schedule_label := "cluster.open-cluster-management.io/backup-schedule-type, cluster.open-cluster-management.io/backup-schedule-type in (kubevirt)"}}

            {{- $sch_crd_name := "schedules.velero.io" }}
            {{- $sch_crd := lookup "apiextensions.k8s.io/v1" "CustomResourceDefinition" "" $sch_crd_name  }}
            {{- $sch_crd_exists := eq $sch_crd.metadata.name  $sch_crd_name }}

            {{ if $sch_crd_exists }}

              {{- $scheduleObj := (lookup "velero.io/v1" "Schedule" $ns $acm_virt_sch_name ) }}

              {{- /* if acm-rho-virt-schedule exists, get the last generated backup and verify the status is Completed  */ -}}
              {{- if eq $scheduleObj.metadata.name $acm_virt_sch_name }}
                {{- $scheduleObjLastBckTime := ($scheduleObj.status.lastBackup) }}
                {{- range $backupList := (lookup "velero.io/v1" "Backup" $ns "" $schedule_label).items }}
                  {{- $backupCreation := $backupList.metadata.creationTimestamp  }}
                  {{- if eq $backupCreation $scheduleObjLastBckTime }}

                    {{- $dataupload_exists := gt (len ( lookup "velero.io/v2alpha1" "DataUpload" $ns "" ).items ) 0 }}

                    {{ if $dataupload_exists }}
              - complianceType: musthave
                objectDefinition:
                  apiVersion: velero.io/v2alpha1
                  kind: DataUpload
                  metadata:
                    namespace: {{ $ns }}
                    labels:
                      velero.io/backup-name: {{ $backupList.metadata.name }}
                  status:
                    phase: Completed
                     {{- end }}

              - complianceType: musthave
                objectDefinition:
                  apiVersion: velero.io/v1
                  kind: Backup
                  metadata:
                    namespace: {{ $ns }}
                    name: {{ $backupList.metadata.name }}
                  status:
                    phase: Completed                   
                  {{- end }}
                {{- end }}
              {{- end }}
            {{- end }}

          remediationAction: inform
          severity: low                                                                                                                                                  
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: create-virt-backup
        spec:
          object-templates-raw: |
            {{- /* ns is the namespace for the OADP deployment  */ -}}
            {{- $ns := "open-cluster-management-backup" }} 
            {{- $acm_virt_sch_name := "acm-rho-virt-schedule" }}

            {{- /* check if VM CRD is not installed  */ -}}
            {{- $vm_crd_name := "virtualmachines.kubevirt.io" }}
            {{- $vm_crd := lookup "apiextensions.k8s.io/v1" "CustomResourceDefinition" "" $vm_crd_name }}
            {{- $vm_crd_exists := eq $vm_crd.metadata.name  $vm_crd_name }}

            {{- /* true if there are any VM instances  */ -}}
            {{- $vms_inst_exists := false  }}
            {{- $vms := "" }}

            {{- /* if vm CRD is installed check if there are VM instances  */ -}}
            {{ if $vm_crd_exists }} 
              {{- $vms = (lookup "kubevirt.io/v1" "VirtualMachine" "" "" ).items }}
              {{- $vms_inst_exists = gt (len ($vms)) 0  }}
            {{- end }}

            {{- $generateSchedule := $vms_inst_exists }}

            {{- /* if there are any vm instances  */ -}}
            {{ if $vms_inst_exists }} 
              
              {{- $cron_schedule := "10 */1 * * *" }}
              {{- $ttl_schedule := "24h0m0s" }}
              {{- $acm_schedule_owner := "" }}
              {{- $paused_schedule := false }}

              {{- /* check if OADP CRD is not installed  */ -}}
              {{- $dpa_crd_name := "dataprotectionapplications.oadp.openshift.io" }}
              {{- $dpa_crd := lookup "apiextensions.k8s.io/v1" "CustomResourceDefinition" "" "dataprotectionapplications.oadp.openshift.io"  }}
              {{- $dpa_crd_exists := eq $dpa_crd.metadata.name  $dpa_crd_name }}

              {{- /* check if velero is installed  */ -}}
              {{- $sch_crd_name := "schedules.velero.io" }}
              {{- $sch_crd := lookup "apiextensions.k8s.io/v1" "CustomResourceDefinition" "" $sch_crd_name  }}
              {{- $sch_crd_exists := eq $sch_crd.metadata.name  $sch_crd_name }}

              {{- /* check if this is a hub, acm installed  */ -}}
              {{- $acm_crd_name := "multiclusterhubs.operator.open-cluster-management.io" }}
              {{- $acm_crd := lookup "apiextensions.k8s.io/v1" "CustomResourceDefinition" "" $acm_crd_name  }}
              {{- $acm_crd_exists := eq $acm_crd.metadata.name  $acm_crd_name }}

              {{ if not ($sch_crd_exists) }}
                {{- /* Schedule CRD not installed so don't try to generate the VM schedule */ -}}
                {{- $generateSchedule = false }}

                {{ if not ($acm_crd_exists) }}
                {{- /* is this is a managed cluster, need to install oadp */ -}}
                {{- end }}


              {{ else }}
                {{- /* Velero Schedule CRD is installed */ -}}

                {{ if $acm_crd_exists }}
                  {{- /* ACM is installed, this is a hub cluster */ -}}

                  {{- /* This is a hub cluster so generate the VM schedule only if there is a Velero acm schedule running */ -}}

                  {{- /* Schedule CRD is installed, check if there is an ACM schedule running */ -}}
                  {{- $acm_schedule_name := "acm-resources-schedule"}}
                  {{- $acm_sch_res := lookup "velero.io/v1" "Schedule" $ns $acm_schedule_name  }}
                  {{- $acm_sch_res_exists := eq $acm_sch_res.metadata.name  $acm_schedule_name }}

                  {{ if not ($acm_sch_res_exists) }}
                    {{- /* ACM hub backup not running so don't generate the vm backup; delete it one exists */ -}}
                    {{- $generateSchedule = false }}
                - complianceType: mustnothave
                  objectDefinition:
                    apiVersion: velero.io/v1
                    kind: Schedule
                    metadata:
                      name: {{ $acm_virt_sch_name }}
                      namespace: {{ $ns }}
                  {{ else }}

                    {{- $generateSchedule = true }}
                    {{- /* get acm schedule settings */ -}}
                    {{- $cron_schedule = $acm_sch_res.spec.schedule }}
                    {{- $ttl_schedule = $acm_sch_res.spec.template.ttl }}
                    {{- $acm_schedule_owner = (index $acm_sch_res.metadata.labels "cluster.open-cluster-management.io/backup-schedule-name") }}
                    {{- $paused_schedule := $acm_sch_res.spec.paused }}
                  {{- end }}

                {{- /* ACM MCH installed, this is the hub */ -}}
                {{- end }}

              {{- /* Velero Schedule CRD is installed */ -}}  
              {{- end }}

              {{ if $generateSchedule }}

                {{- /* vms_ns gives the list of all namespaces where VM exist  */ -}}
                {{ $vms_ns := " " }}   
                {{- /* vms_ns gives the list of all VM names  */ -}}  
                {{ $vms_names := " " }}   

                {{- range $vms := (lookup "kubevirt.io/v1" "VirtualMachine" "" "" ).items }}
                        
                  {{ if not (contains $vms.metadata.name $vms_ns) }}
                    {{- /* add VM namespace if not already in the vms_ns  */ -}}
                    {{- $vms_ns = (cat $vms_ns $vms.metadata.namespace " ") }}
                  {{- end }}
                  {{ if not (contains $vms.metadata.name $vms_names) }}
                    {{- /* add VM name if not already in the vms_names  */ -}}
                    {{- $vms_names = (cat $vms_names $vms.metadata.name " ") }}
                  {{- end }}
                {{- end }}

              {{ if and (not (eq $vms_ns " ")) (not (eq $vms_names " ")) }}

                {{- range $dpas := (lookup "oadp.openshift.io/v1alpha1" "DataProtectionApplication" $ns "" ).items }}
                - complianceType: musthave
                  objectDefinition:
                    apiVersion: oadp.openshift.io/v1alpha1
                    kind: DataProtectionApplication
                    metadata:
                      name: {{ $dpas.metadata.name }}
                      namespace: {{ $ns }}
                    spec:
                      configuration:
                        velero:
                          defaultPlugins:
                            - csi
                            - openshift
                            - kubevirt
                        nodeAgent: 
                          enable: true 
                          uploaderType: kopia
                {{- end }}

                - complianceType: musthave
                  objectDefinition:
                    apiVersion: velero.io/v1
                    kind: Schedule
                    metadata:
                      name: {{ $acm_virt_sch_name }}
                      namespace: {{ $ns }}
                      labels:
                        {{ if not (eq $acm_schedule_owner "") }}
                        cluster.open-cluster-management.io/backup-schedule-name: {{ $acm_schedule_owner }}
                        {{- end }}
                        cluster.open-cluster-management.io/backup-cluster: {{ fromClusterClaim "id.openshift.io" }}
                        cluster.open-cluster-management.io/backup-schedule-type: kubevirt                  
                    spec:
                      paused: {{ $paused_schedule }}
                      schedule: {{ $cron_schedule }}
                      template:
                        ttl: {{ $ttl_schedule }}
                        includeClusterResources: true
                        snapshotMoveData: true
                        defaultVolumesToFsBackup: false
                        includedNamespaces:
                          {{- range $vms_namespace := split " " $vms_ns }}
                          {{ if not (eq $vms_namespace "") }}
                          - {{ $vms_namespace }}
                          {{- end }}
                          {{- end }}
                        orLabelSelectors:
                          - matchExpressions:
                              - values:
                                {{- range $vms_name := split " " $vms_names }}
                                  {{ if not (eq $vms_name "") }}
                                - {{ $vms_name }}
                                  {{- end }}
                                {{- end }}
                                key: app
                                operator: In
                          - matchExpressions:
                              - values:
                                {{- range $vms_name := split " " $vms_names }}
                                  {{ if not (eq $vms_name "") }}
                                - {{ $vms_name }}
                                  {{- end }}
                                {{- end }}
                                key: kubevirt.io/domain
                                operator: In

                {{- /* there are VM resources */ -}}
                {{- end }}

              {{- /* generateSchedule is true */ -}}
              {{- end}}

            {{- /* VM CRD is installed */ -}}
            {{- end}}

          remediationAction: enforce
          severity: high   

---
apiVersion: cluster.open-cluster-management.io/v1beta1
kind: Placement
metadata:
  name: virt-backup-placement
spec:
  predicates:
    - requiredClusterSelector:
        labelSelector:
          matchExpressions:
            - key: 'name'
              operator: 'In'
              values: 
                - 'local-cluster'
    - requiredClusterSelector:
        labelSelector:
          matchExpressions:
            - key: 'acm-virt-backup'
              operator: 'Exists'        
---
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  name: virt-backup-placement
placementRef:
  name: virt-backup-placement
  apiGroup: cluster.open-cluster-management.io
  kind: Placement
subjects:
  - name: virt-backup
    apiGroup: policy.open-cluster-management.io
    kind: Policy
---
apiVersion: cluster.open-cluster-management.io/v1beta2
kind: ManagedClusterSetBinding
metadata:
  name: global
spec:
  clusterSet: global